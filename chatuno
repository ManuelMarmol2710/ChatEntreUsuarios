package Ingresodeusuariosdd;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

public class chatuno extends JFrame implements Runnable  {

 JPanel contentPane;
 private JButton enviar,btnNewButton_1 ; 
 private JTextField textField_1,textField_3,textField9;;
 private Connection connct;
 
 private PreparedStatement preSta;
 private JLabel lblNewLabel,lblNewLabel_1;
 private JTextArea textArea;
	
public chatuno() {
	setTitle("Chat1");
	    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 580, 392);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
	
		
		enviar = new JButton("Enviar");
		enviar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
		
	       try {
				Socket sock = new Socket("192.168.0.115",8888);
				Infousuario1 info = new Infousuario1 ();
				info.setTexto(textField9.getText());
				info.setTextField_3(textField_3.getText());
				ObjectOutputStream salidadatos =new ObjectOutputStream(sock.getOutputStream());
				salidadatos.writeObject(info);
				
			Socket socka = new Socket("192.168.0.115",8080);
			Infousuario1 info1 = new Infousuario1 ();
			info1.setTexto(textField9.getText());
			info1.setTextField_3(textField_3.getText());
			ObjectOutputStream salidadatoss =new ObjectOutputStream(socka.getOutputStream());
			salidadatoss.writeObject(info1);
	            
	            
	            sock.close();
		        socka.close();

				try {
					connct = DriverManager.getConnection("jdbc:mysql://localhost/chat", "root", "");
					   preSta = connct.prepareStatement("insert into chat2 values(?,?)");
						preSta.setString(1,textField_3.getText());
						preSta.setString(2,textField9.getText());
						preSta.executeUpdate();
				} catch (SQLException e1) {
					e1.printStackTrace();
				}	
	       

	       
	       } catch (UnknownHostException e1) {
					
					e1.printStackTrace();
				} catch (IOException e1) {
									e1.printStackTrace();
				System.out.println(e1.getMessage());}		
	
	       try { 
		    	 preSta.close();
          } catch (SQLException a) {
              a.printStackTrace();
          }
			
			}
		});
	  
		enviar.setBounds(10, 316, 89, 23);
		contentPane.add(enviar);
		
		textField9 = new JTextField();
		textField9.setText("");
		textField9.setBounds(109, 317, 287, 20);
		contentPane.add(textField9);
		textField9.setColumns(10);
		
		
		textField_1 = new JTextField();
		textField_1.setBounds(326, 16, 169, 17);
		contentPane.add(textField_1);
		textField_1.setColumns(10);
		
		btnNewButton_1 = new JButton("Conexion");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			
				Socket sock;
				try {
					sock = new Socket("192.168.0.115",8080);
					Infousuario1 info = new Infousuario1 ();
				    info.setTextField_1(textField_1.getText());
					ObjectOutputStream salidadatos =new ObjectOutputStream(sock.getOutputStream());
					salidadatos.writeObject(info);
				
					try {
						connct = DriverManager.getConnection("jdbc:mysql://localhost/chat", "root", "");
						   preSta.executeUpdate();
					} catch (SQLException e1) {
						e1.printStackTrace();
					}	
				} catch (UnknownHostException e1) {
					e1.printStackTrace();
				} catch (IOException e1) {
					e1.printStackTrace();
				}
				
				  try { 
				    	 preSta.close();
		            } catch (SQLException a) {
		                a.printStackTrace();
		            }
			
			}
		});
		btnNewButton_1.setBounds(406, 316, 89, 23);
		contentPane.add(btnNewButton_1);
		
		lblNewLabel = new JLabel("Escriba el nombre del usuario que desea conectarse:");
		lblNewLabel.setBounds(10, 12, 338, 21);
		contentPane.add(lblNewLabel);
		
		lblNewLabel_1 = new JLabel("Nombre o Alias:");
		lblNewLabel_1.setBounds(211, 46, 272, 14);
		contentPane.add(lblNewLabel_1);
		
		textField_3 = new JTextField();
		textField_3.setColumns(10);
		textField_3.setBounds(326, 44, 169, 17);
		contentPane.add(textField_3);
		
		
		
		Thread hilo = new Thread(this);
        hilo.start();
		
		 textArea = new JTextArea();
		textArea.setBounds(10, 72, 480, 233);
		contentPane.add(textArea);

	
	
}
	
	
	


@Override
public void run() {
	
	try {
		
		ServerSocket servidor = new ServerSocket(8080);
	   
		String textField,textField9,textField1,textField2,textField3,textField4,textField5,textField_1,textField_4;
		
		Infousuario1 info;
		
		

		for (int p = 0 ; p < 1 ; p++) {
			Socket socka =servidor.accept();
		  
			  ObjectInputStream entradaa = new ObjectInputStream(socka.getInputStream());
			  info = (Infousuario1) entradaa.readObject();
	              textField = info.getTextfield();
				  textField1 = info.getTextfield1();
		          textField2 = info.getTextField2();
			      textField3 = info.getTextField3();
			      textField4 = info.getTextField4();
			      textField5 = info.getTextField5();
			     
			      textArea.append("\n" + textField +  " - " + textField1 + " - " + textField2 + " - " + textField3 + " - " + textField4 + " - " + textField5);
			      textArea.append("\n Eres null en el chat");			      
			      
			      socka.close();
			}
		
		for (int p = 0 ; p < 1 ; p++) {
			Socket socka =servidor.accept();
			  
			  ObjectInputStream entradaa = new ObjectInputStream(socka.getInputStream());
			  info = (Infousuario1) entradaa.readObject();
			textField_1 = info.getTextField_1();
		      JOptionPane.showMessageDialog(null, "Se ha establecido conexion con: " + textField_1 );		
		}		
				
		
			while (true) {
			Socket socka =servidor.accept();
			ObjectInputStream entradaa = new ObjectInputStream(socka.getInputStream());
			info = (Infousuario1) entradaa.readObject();
			textField9  = info.getTexto();
			textField_4 = info.getTextField_4();
			 textArea.append("\n"  +  textField_4 + ": " + textField9  );
		 
			
			
			}

	    
	  } catch (IOException | ClassNotFoundException e) {
		
		e.printStackTrace();
		}


}

}
